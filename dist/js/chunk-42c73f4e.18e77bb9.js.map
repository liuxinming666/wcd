{"version":3,"sources":["webpack:///./src/components/common/zqrl-set.vue?6c98","webpack:///./src/components/common/zqrl-set.vue?7f25","webpack:///src/components/common/zqrl-set.vue","webpack:///./src/components/common/zqrl-set.vue?5804","webpack:///./src/components/common/zqrl-set.vue","webpack:///./node_modules/core-js/modules/es.string.sub.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticStyle","attrs","on","$event","onFrameModeSetChange","_v","onModeSetChange","ref","staticClass","staticRenderFns","component","$","createHTML","forcedStringHTMLMethod","target","proto","forced","sub"],"mappings":"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","file":"js/chunk-42c73f4e.18e77bb9.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./zqrl-set.vue?vue&type=style&index=0&id=0dec8bb6&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./zqrl-set.vue?vue&type=style&index=0&id=0dec8bb6&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}},[_c('Layout',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}},[_c('LayoutPanel',{staticStyle:{\"width\":\"200px\"},attrs:{\"region\":\"east\",\"title\":\"工具栏\",\"collapsible\":\"true\",\"expander\":\"true\",\"collapsed\":\"true\",\"collapsedSize\":\"20\"}},[_c('Accordion',{staticStyle:{\"height\":\"200px\"}},[_c('AccordionPanel',{attrs:{\"title\":'模式选择'}},[_c('div',[_c('label',[_c('input',{attrs:{\"id\":\"rbEChart\",\"name\":\"setFrameMode\",\"type\":\"radio\",\"value\":\"1\",\"checked\":\"\"},on:{\"click\":function($event){return _vm.onFrameModeSetChange('1')}}}),_vm._v(\"极速模式\")]),_c('label',[_c('input',{attrs:{\"id\":\"rbTensorflow\",\"name\":\"setFrameMode\",\"type\":\"radio\",\"value\":\"2\"},on:{\"click\":function($event){return _vm.onFrameModeSetChange('2')}}}),_vm._v(\"普通模式\")])])]),_c('AccordionPanel',{attrs:{\"title\":'拟合方法'}},[_c('div',[_c('label',[_c('input',{attrs:{\"name\":\"setRadio\",\"type\":\"radio\",\"value\":\"5\"},on:{\"click\":function($event){return _vm.onModeSetChange('5');}}}),_vm._v(\"线 性\")]),_vm._v(\" \"),_c('label',[_c('input',{attrs:{\"name\":\"setRadio\",\"type\":\"radio\",\"value\":\"1\",\"checked\":\"\"},on:{\"click\":function($event){return _vm.onModeSetChange('1');}}}),_vm._v(\"二项式\")])]),_c('div',[_c('label',[_c('input',{attrs:{\"name\":\"setRadio\",\"type\":\"radio\",\"value\":\"6\"},on:{\"click\":function($event){return _vm.onModeSetChange('6');}}}),_vm._v(\"三项式\")]),_vm._v(\" \"),_c('label',[_c('input',{attrs:{\"name\":\"setRadio\",\"type\":\"radio\",\"value\":\"7\"},on:{\"click\":function($event){return _vm.onModeSetChange('7');}}}),_vm._v(\"四项式\")])]),_c('div',[_c('label',[_c('input',{attrs:{\"name\":\"setRadio\",\"type\":\"radio\",\"value\":\"2\"},on:{\"click\":function($event){return _vm.onModeSetChange('2');}}}),_vm._v(\"对 数\")]),_vm._v(\" \"),_c('label',[_c('input',{attrs:{\"name\":\"setRadio\",\"type\":\"radio\",\"value\":\"3\"},on:{\"click\":function($event){return _vm.onModeSetChange('3');}}}),_vm._v(\"指 数\")])]),_c('div',[_c('label',{staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"labelMi\"}},[_c('input',{attrs:{\"name\":\"setRadio\",\"onchange\":\"onModeSetChange(this);\",\"type\":\"radio\",\"value\":\"4\"}}),_vm._v(\"幂\")])]),_c('div',[_c('label',[_c('input',{attrs:{\"id\":\"chkIsRope\",\"onchange\":\"onChkIsRopeChange(this);\",\"type\":\"checkbox\"}}),_vm._v(\" 是否考虑绳套\")])])]),_c('AccordionPanel',{attrs:{\"title\":'图表设置'}},[_c('p',[_vm._v(\"Content3\")])])],1)],1),_c('LayoutPanel',{staticStyle:{\"height\":\"100%\"},attrs:{\"region\":\"center\"}},[_c('div',{ref:\"chart\",staticClass:\"highcharts-container\"})])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div style=\"width: 100%;height: 100%;\">\r\n        <Layout style=\"width: 100%;height: 100%;\">\r\n            <LayoutPanel region=\"east\" title=\"工具栏\" collapsible=\"true\"\r\n                         expander=\"true\" collapsed=\"true\" collapsedSize=\"20\"\r\n                         style=\"width:200px;\">\r\n                <Accordion style=\"height:200px\">\r\n                    <AccordionPanel :title=\"'模式选择'\">\r\n                        <div>\r\n                            <label><input id=\"rbEChart\" @click=\"onFrameModeSetChange('1')\"\r\n                                          name=\"setFrameMode\" type=\"radio\" value=\"1\" checked />极速模式</label>\r\n                            <label><input id=\"rbTensorflow\" @click=\"onFrameModeSetChange('2')\"\r\n                                          name=\"setFrameMode\" type=\"radio\" value=\"2\" />普通模式</label>\r\n                        </div>\r\n                    </AccordionPanel>\r\n                    <AccordionPanel :title=\"'拟合方法'\">\r\n                        <div>\r\n                            <label><input name=\"setRadio\" @click=\"onModeSetChange('5');\" type=\"radio\" value=\"5\" />线&nbsp;&nbsp;&nbsp;性</label>&nbsp;&nbsp;\r\n                            <label><input name=\"setRadio\" @click=\"onModeSetChange('1');\" type=\"radio\" value=\"1\" checked />二项式</label>\r\n                        </div>\r\n                        <div>\r\n                            <label><input name=\"setRadio\" @click=\"onModeSetChange('6');\" type=\"radio\" value=\"6\" />三项式</label>&nbsp;&nbsp;\r\n                            <label><input name=\"setRadio\" @click=\"onModeSetChange('7');\" type=\"radio\" value=\"7\" />四项式</label>\r\n                        </div>\r\n                        <div>\r\n                            <label><input name=\"setRadio\" @click=\"onModeSetChange('2');\" type=\"radio\" value=\"2\" />对&nbsp;&nbsp;&nbsp;数</label>&nbsp;&nbsp;\r\n                            <label><input name=\"setRadio\" @click=\"onModeSetChange('3');\" type=\"radio\" value=\"3\" />指&nbsp;&nbsp;&nbsp;数</label>\r\n                        </div>\r\n                        <div>\r\n                            <label id=\"labelMi\" style=\"display:none;\"><input name=\"setRadio\" onchange=\"onModeSetChange(this);\" type=\"radio\" value=\"4\" />幂</label>\r\n                        </div>\r\n                        <div>\r\n                            <label><input id=\"chkIsRope\" onchange=\"onChkIsRopeChange(this);\" type=\"checkbox\" />&nbsp;是否考虑绳套</label>\r\n                        </div>\r\n                    </AccordionPanel>\r\n                    <AccordionPanel :title=\"'图表设置'\">\r\n                        <p>Content3</p>\r\n                    </AccordionPanel>\r\n                </Accordion>\r\n            </LayoutPanel>\r\n            <LayoutPanel region=\"center\" style=\"height:100%\">\r\n                <div ref=\"chart\" class=\"highcharts-container\">\r\n                </div>\r\n            </LayoutPanel>\r\n        </Layout>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Highcharts from 'highcharts/highstock';\r\n    import HighchartsMore from 'highcharts/highcharts-more';\r\n    import HighchartsDrilldown from 'highcharts/modules/drilldown';\r\n    import Highcharts3D from 'highcharts/highcharts-3d';\r\n    import Highmaps from 'highcharts/modules/map';\r\n\r\n    HighchartsMore(Highcharts)\r\n    HighchartsDrilldown(Highcharts);\r\n    Highcharts3D(Highcharts);\r\n    Highmaps(Highcharts);\r\n\r\n    export default {\r\n        name: \"zqrl-set\",\r\n        props:{\r\n            stcd:\"\",\r\n            stnm:\"\",\r\n            parWnd:{}\r\n        },\r\n        data(){\r\n            return {\r\n                chart: null,\r\n                g_threeLineData:null,//实测点数据集\r\n                sTypeMode:'1',//模式选择，默认极速模式\r\n                g_lineModeSet:'1',//拟合方法选择，默认二项式\r\n                g_xMaxTrain:0,   //训练数据X的最大值\r\n                g_yMaxTrain:0,   //训练数据Y的最大值\r\n                g_xMinTrain:0,    //训练数据X的最小值\r\n                g_yMinTrain:0,    //训练数据Y的最小值\r\n                //模型变量设置\r\n                a:tf.variable(tf.scalar(Math.random())),\r\n                b:tf.variable(tf.scalar(Math.random())),\r\n                c:tf.variable(tf.scalar(Math.random())),\r\n                d:tf.variable(tf.scalar(Math.random())),\r\n                e:tf.variable(tf.scalar(Math.random())),\r\n                aECStat:tf.variable(tf.scalar(Math.random())),\r\n                bECStat:tf.variable(tf.scalar(Math.random())),\r\n                cECStat:tf.variable(tf.scalar(Math.random())),\r\n                dECStat:tf.variable(tf.scalar(Math.random())),\r\n                eECStat:tf.variable(tf.scalar(Math.random())),\r\n            }\r\n        },\r\n        mounted:function () {\r\n            this.initData();\r\n            //this.setChartData();\r\n        },\r\n        methods:{\r\n            //根据测站编码获取实测点数据\r\n            initData:function() {\r\n                let params = {\r\n                    params:{\r\n                        stcd: this.stcd\r\n                    }\r\n                };\r\n                this.axios.get('/api/getMeasurDataByStcd',params)\r\n                    .then(res => {\r\n                        // 成功回调\r\n                        let data = res.data;\r\n                        this.g_threeLineData = res.data;\r\n                        let length = data.length;\r\n\r\n                        let meaPtData = new Array();\r\n                        for (let i=0;i<length;i++){\r\n                            meaPtData.push({x:parseFloat(data[i].q),y:parseFloat(data[i].z)});\r\n                        }\r\n\r\n                        let series = new Array();\r\n                        series.push({type:\"scatter\",name:\"实测点\",data:meaPtData});\r\n\r\n                        this.setChartData(series);\r\n                    }, res => {\r\n                        debugger;\r\n                        // 错误回调\r\n                    });\r\n            },\r\n            //初始化图表\r\n            setChartData:function (series) {\r\n                let options = {\r\n                    title: {\r\n                        text: this.stnm + '水位流量关系曲线'                 // 标题\r\n                    },\r\n                    credits:{\r\n                        enabled: false\r\n                    },\r\n                    tooltip:{\r\n                        formatter:function () {\r\n                            return \"<b>水位:</b><b>\" + this.y + \"</b><br/><b>流量:</b><b>\" + this.x + \"</b>\";\r\n                        }  \r\n                    },\r\n                    xAxis: {\r\n                        title:{\r\n                            text:\"流量(m³/s)\"\r\n                        },\r\n                        gridLineWidth:1\r\n                    },\r\n                    yAxis: {\r\n                        title: {\r\n                            text: '水位(m)'                // y 轴标题\r\n                        },\r\n                        gridLineWidth:1\r\n                    },\r\n                    series: series\r\n                };\r\n                this.chart = new Highcharts.Chart(this.$refs.chart,options);\r\n\r\n                this.fitLineECStat();\r\n            },\r\n            //图表重适应容器大小\r\n            reflowChart:function () {\r\n                debugger;\r\n                this.chart.reflow();\r\n            },\r\n            //模式选择单选框\r\n            onFrameModeSetChange:function (sType) {\r\n                this.shippingType = sType;\r\n                if(sType == '1')\r\n                {\r\n                    //alert('极速模式');\r\n                    this.fitLineECStat();\r\n                }\r\n                else {\r\n                    alert('普通模式');\r\n                }\r\n            },\r\n            //拟合方法选择单选框\r\n            onModeSetChange:function (sType) {\r\n                this.g_lineModeSet = sType;\r\n            },\r\n            //拟合线,利用ecStat\r\n            fitLineECStat:async function() {\r\n                let trainData = this.processTrainDataECStat();\r\n                let xAry = trainData['xNor'].dataSync();\r\n                let yAry = trainData['yNor'].dataSync();\r\n\r\n                let length = (trainData['xNor'].dataSync()).length;\r\n                let logicData = new Array();\r\n\r\n                for (var i = 0; i < length; i++) {\r\n                    logicData.push([parseFloat(xAry[i]), parseFloat(yAry[i])]);\r\n                }\r\n\r\n                //相当于参数训练\r\n                let myRegression;\r\n                switch (this.g_lineModeSet) {\r\n                    case '1'://二项式\r\n                        myRegression = ecStat.regression('polynomial', logicData, 2);\r\n                        this.aECStat = tf.scalar(myRegression.parameter[2], 'float32');\r\n                        this.bECStat = tf.scalar(myRegression.parameter[1], 'float32');\r\n                        this.cECStat = tf.scalar(myRegression.parameter[0], 'float32');\r\n                        break;\r\n                    case '6'://三项式\r\n                        myRegression = ecStat.regression('polynomial', logicData, 3);\r\n                        this.aECStat = tf.scalar(myRegression.parameter[3], 'float32');\r\n                        this.bECStat = tf.scalar(myRegression.parameter[2], 'float32');\r\n                        this.cECStat = tf.scalar(myRegression.parameter[1], 'float32');\r\n                        this.dECStat = tf.scalar(myRegression.parameter[0], 'float32');\r\n                        break;\r\n                    case '7'://四项式\r\n                        myRegression = ecStat.regression('polynomial', logicData, 4);\r\n                        this.aECStat = tf.scalar(myRegression.parameter[4], 'float32');\r\n                        this.bECStat = tf.scalar(myRegression.parameter[3], 'float32');\r\n                        this.cECStat = tf.scalar(myRegression.parameter[2], 'float32');\r\n                        this.dECStat = tf.scalar(myRegression.parameter[1], 'float32');\r\n                        this.eECStat = tf.scalar(myRegression.parameter[0], 'float32');\r\n                        break;\r\n                    case '2'://对数\r\n                        myRegression = ecStat.regression('logarithmic', logicData);\r\n                        this.aECStat = tf.scalar(myRegression.parameter['gradient'], 'float32');\r\n                        this.bECStat = tf.scalar(myRegression.parameter['intercept'], 'float32');\r\n                        break;\r\n                    case '3'://指数\r\n                        myRegression = ecStat.regression('exponential', logicData);\r\n                        this.aECStat = tf.scalar(myRegression.parameter['coefficient'], 'float32');\r\n                        this.bECStat = tf.scalar(myRegression.parameter['index'], 'float32');\r\n                        this.cECStat = tf.scalar(0);\r\n                        break;\r\n                    case '4'://幂\r\n                        myRegression = ecStat.regression('polynomial', logicData, 2);\r\n                        this.aECStat = tf.scalar(myRegression.parameter[2], 'float32');\r\n                        this.bECStat = tf.scalar(myRegression.parameter[1], 'float32');\r\n                        this.cECStat = tf.scalar(myRegression.parameter[0], 'float32');\r\n                        break;\r\n                    case '5'://线性\r\n                        myRegression = ecStat.regression('linear', logicData);\r\n                        this.aECStat = tf.scalar(myRegression.parameter['gradient'], 'float32');\r\n                        this.bECStat = tf.scalar(myRegression.parameter['intercept'], 'float32');\r\n                        break;\r\n                }\r\n                debugger;\r\n                /*var xData = generateXData(15);\r\n                var yPre = predictECStat(xData);\r\n\r\n                var realData = processPredictData(xData, yPre);\r\n                var xReal = realData['xReal'];\r\n                var yReal = realData['yReal'];\r\n                var xRealAry = xReal.dataSync();\r\n                var yRealAry = yReal.dataSync();\r\n\r\n                var sShow = myRegression.expression;\r\n                sShow = sShow.replace(/x/g, 'h');\r\n                sShow = sShow.replace(/y/g, 'q');\r\n\r\n                //显示公式\r\n                //$(\"#spanFormula\").html(sShow);\r\n\r\n                var data = g_threeLineData.rows;\r\n                var length = g_threeLineData.total;\r\n\r\n                var serAry = new Array();   //数据数组\r\n                var gridDataAry = new Array();\r\n\r\n                var dataMeaTmp = new Array();\r\n                var dataMeaStyleTmp = new Array();  //数据点带样式\r\n                var dataLineTmp = new Array();  //拟合的曲线\r\n                for (var i = 0; i < length; i++) {\r\n                    //实测点数据\r\n                    var zqMeaTmp = new Array();\r\n                    zqMeaTmp.push(parseFloat(data[i].Q))\r\n                    zqMeaTmp.push(parseFloat(data[i].Z))\r\n                    dataMeaTmp.push(zqMeaTmp);\r\n\r\n                    var sColor;\r\n                    if ($(\"#chkIsRope\").prop(\"checked\") == false) {\r\n                        sColor = 'rgba(0, 0, 256, 0.5)';\r\n                    }\r\n                    else {//涨\r\n                        if (data[i].WPTN == '5') {\r\n                            sColor = 'rgba(256, 0, 0, 0.5)';\r\n                        }//洛\r\n                        else if (data[i].WPTN == '4') {\r\n                            sColor = 'rgba(0, 256, 0, 0.5)';\r\n                        }//平\r\n                        else if (data[i].WPTN == '6') {\r\n                            sColor = 'rgba(0, 0, 256, 0.5)';\r\n                        }\r\n                    }\r\n\r\n                    dataMeaStyleTmp.push({ name: data[i].WPTN, value: zqMeaTmp, itemStyle: { color: sColor } });\r\n                    //gridDataAry.push({ 'coluZ': data[i].Z, 'coluForeQ': parseFloat(yReal.dataSync()[i]).toFixed(2), 'coluMeaQ': parseFloat(data[i].Q) });\r\n                }\r\n                g_aryMeaPtData = dataMeaTmp;\r\n\r\n                length = xRealAry.length;\r\n                for (var i = 0; i < length; i++) {\r\n                    //拟合的曲线数据\r\n                    var zqSimTmp = new Array();\r\n                    //zqSimTmp.push(parseFloat(parseFloat(yRealAry[i]).toFixed(2)));\r\n                    //zqSimTmp.push(parseFloat(parseFloat(xRealAry[i]).toFixed(2)));\r\n                    zqSimTmp.push(parseFloat(yRealAry[i]));\r\n                    zqSimTmp.push(parseFloat(xRealAry[i]));\r\n                    dataLineTmp.push(zqSimTmp);\r\n\r\n                    gridDataAry.push({ 'coluZ': parseFloat(parseFloat(xRealAry[i]).toFixed(2)), 'coluForeQ': parseFloat(parseFloat(yRealAry[i]).toFixed(2)) });\r\n                }\r\n\r\n                var objMea = {\r\n                    id: 'meaPt',\r\n                    name: '实测点',\r\n                    type: 'scatter',\r\n                    data: dataMeaStyleTmp,\r\n                    itemStyle: {\r\n                        color: 'rgba(0, 0, 256, 0.5)'\r\n                    }\r\n                };\r\n\r\n                //if ($(\"#chkIsRope\").prop(\"checked\") == false) {\r\n                //    objMea.itemStyle = { color: 'rgba(0, 0, 256, 0.5)' };\r\n                //}\r\n\r\n\r\n                var objLine = {\r\n                    name: '预测曲线',\r\n                    id: 'simLine',\r\n                    type: 'line',\r\n                    data: dataLineTmp,\r\n                    //data: lossAry,\r\n                    symbolSize: symbolSize,\r\n                    showSymbol: true,\r\n                    smooth: true,\r\n                };\r\n                g_arySimLineData = dataLineTmp;\r\n\r\n                var hisLine = {\r\n                    name: '历史曲线',\r\n                    id: 'hisLine',\r\n                    type: 'line',\r\n                    data: [],\r\n                    //data: lossAry,\r\n                    symbolSize: symbolSize,\r\n                    showSymbol: false,\r\n                    smooth: true,\r\n                };\r\n\r\n                serAry.push(objLine);\r\n                serAry.push(hisLine);\r\n                serAry.push(objMea);\r\n\r\n                $('#wPro').window('close');\r\n\r\n                SetZqrlSimChartData(serAry);\r\n                if ($(\"#chkIsRope\").prop(\"checked\") == true) {\r\n                    fitAgain();\r\n                }\r\n\r\n                ShowTable(gridDataAry, g_stnm);*/\r\n            },\r\n            //生成训练的数据，特征缩放，根据ECStat的特性进行定制\r\n            processTrainDataECStat:function() {\r\n                let data = this.g_threeLineData;\r\n                let length = this.g_threeLineData.length;\r\n                var xAry = new Array();\r\n                var yAry = new Array();\r\n                for (var i = 0; i < length; i++) {\r\n                    xAry.push(data[i].z)\r\n                    yAry.push(data[i].q)\r\n                }\r\n\r\n                let xs = tf.tensor2d(xAry, [length, 1]);\r\n                let ys = tf.tensor2d(yAry, [length, 1]);\r\n\r\n                //计算X,Y的最大值和最小值\r\n                this.g_xMaxTrain = xs.max();   //训练数据X的最大值\r\n                this.g_yMaxTrain = ys.max();   //训练数据Y的最大值\r\n                this.g_xMinTrain = xs.min();    //训练数据X的最小值\r\n                this.g_xMinTrain = tf.sub(this.g_xMinTrain, tf.scalar(0.001, 'float32'));\r\n                this.g_yMinTrain = ys.min();    //训练数据Y的最小值\r\n                this.g_yMinTrain = tf.sub(this.g_yMinTrain, tf.scalar(0.001, 'float32'));\r\n\r\n                //X,Y标准化,特征缩放\r\n                let xNor = tf.div(xs.sub(this.g_xMinTrain), this.g_xMaxTrain.sub(this.g_xMinTrain)); //tf.div(xs.sub(g_xMeanTrain), g_xStdTrain); //tf.batchNormalization(xs, g_xMeanTrain, xVar);\r\n                let yNor = tf.div(ys.sub(this.g_yMinTrain), this.g_yMaxTrain.sub(this.g_yMinTrain));//tf.div(ys.sub(g_yMeanTrain), g_yStdTrain);\r\n                return { 'xNor': xNor, 'yNor': yNor };\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .highcharts-container {\r\n        width: 95%;\r\n        height: 100%;\r\n    }\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./zqrl-set.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./zqrl-set.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./zqrl-set.vue?vue&type=template&id=0dec8bb6&scoped=true&\"\nimport script from \"./zqrl-set.vue?vue&type=script&lang=js&\"\nexport * from \"./zqrl-set.vue?vue&type=script&lang=js&\"\nimport style0 from \"./zqrl-set.vue?vue&type=style&index=0&id=0dec8bb6&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0dec8bb6\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/forced-string-html-method');\n\n// `String.prototype.sub` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.sub\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('sub') }, {\n  sub: function sub() {\n    return createHTML(this, 'sub', '', '');\n  }\n});\n"],"sourceRoot":""}